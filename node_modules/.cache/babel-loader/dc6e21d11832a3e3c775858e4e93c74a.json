{"ast":null,"code":"var _jsxFileName = \"/Users/Mancho/Projects/zaelot/githubZaelot/brizuela-hero-exercise/src/components/TextField/TextField.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport style from './TextField.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst basicValidation = (validator, value) => {\n  const emailRe = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  switch (validator) {\n    case \"required\":\n      return value.length > 0 ? \"\" : \"This value is required\";\n\n    case \"email\":\n      return emailRe.test(value) ? \"\" : \"Please enter a valid email\";\n\n    default:\n      return \"\";\n  }\n};\n\nconst classNamesField = {\n  Field: style.textField,\n  Focus: style.textFocus,\n  Error: style.textError\n};\n\nconst TextField = props => {\n  _s();\n\n  const [value, setValue] = useState(props.value);\n  const [errorMsg, setErrorMsg] = useState('');\n  const [isTouchedOnce, setTouchedOnce] = useState(null);\n  const [isBlurred, setBlurred] = useState(false);\n  const [classInput, setClassInput] = useState(classNamesField.Field);\n\n  const runValidations = value => {\n    if (!isTouchedOnce) return;\n    let validationRes;\n\n    for (let i = 0; i < props.validations.length; i++) {\n      const validator = props.validations[i];\n      if (typeof validator === \"string\") validationRes = basicValidation(validator, value);\n\n      if (validationRes.length > 1) {\n        setErrorMsg(validationRes);\n        setClassInput(classNamesField.Error);\n      } else {\n        setErrorMsg('');\n        setClassInput(classNamesField.Field);\n      }\n\n      if (validationRes) break;\n    }\n  };\n\n  const handleChange = (name, currentValue) => {\n    setValue(currentValue);\n    runValidations(currentValue);\n    props.onChange(name, currentValue);\n  };\n\n  const onFocus = () => {\n    setTouchedOnce(true);\n    setClassInput(classNamesField.Focus);\n    setBlurred(false);\n  };\n\n  const onBlur = event => {\n    const {\n      name\n    } = event.target;\n    const currentValue = event.target.value;\n    runValidations(currentValue);\n    setBlurred(true);\n\n    if (errorMsg.length > 0) {\n      setClassInput(classNamesField.Error);\n    } else {\n      setClassInput(classNamesField.Field);\n    }\n\n    props.onChange(name, currentValue);\n  };\n\n  useEffect(() => {\n    if (props.value === null) {\n      setErrorMsg('This value is required');\n      setClassInput(classNamesField.Error);\n    }\n\n    if (props.value === '') {\n      setErrorMsg('');\n      setValue('');\n      setClassInput(classNamesField.Field);\n    }\n  }, [props.value]);\n  const shouldDisplayError = errorMsg || isTouchedOnce && isBlurred;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.formField,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.errorSection,\n      children: shouldDisplayError && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: style.errorMsg,\n        children: errorMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.labelSection,\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: props.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: classInput,\n      type: props.type || \"text\",\n      value: value,\n      name: props.name,\n      onChange: e => handleChange(props.name, e.target.value),\n      placeholder: props.placeholder,\n      onFocus: onFocus,\n      onBlur: onBlur\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }, this)]\n  }, props.name, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TextField, \"opXjQwWinCDK6/aWeslasPHOQ/I=\");\n\n_c = TextField;\nexport default TextField;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextField\");","map":{"version":3,"sources":["/Users/Mancho/Projects/zaelot/githubZaelot/brizuela-hero-exercise/src/components/TextField/TextField.jsx"],"names":["React","useEffect","useState","style","basicValidation","validator","value","emailRe","length","test","classNamesField","Field","textField","Focus","textFocus","Error","textError","TextField","props","setValue","errorMsg","setErrorMsg","isTouchedOnce","setTouchedOnce","isBlurred","setBlurred","classInput","setClassInput","runValidations","validationRes","i","validations","handleChange","name","currentValue","onChange","onFocus","onBlur","event","target","shouldDisplayError","formField","errorSection","labelSection","label","type","e","placeholder"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport style from './TextField.module.scss';\n\nconst basicValidation = (validator, value) => {\n    const emailRe = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    switch (validator) {\n      case \"required\":\n        return value.length > 0 ? \"\" : \"This value is required\";\n      case \"email\":\n        return emailRe.test(value) ? \"\" : \"Please enter a valid email\";\n      default:\n        return \"\";\n    }\n  };\n\n\nconst classNamesField = {\n    Field: style.textField,\n    Focus: style.textFocus,\n    Error:style.textError,\n}\n\nconst TextField = props => {\n    const [value, setValue] = useState(props.value);\n    const [errorMsg, setErrorMsg] = useState('');\n    const [isTouchedOnce, setTouchedOnce] = useState(null);\n    const [isBlurred, setBlurred] = useState(false);\n    const [classInput, setClassInput] = useState(classNamesField.Field)\n\n    const runValidations = (value) => {        \n        if (!isTouchedOnce) return;\n        let validationRes;\n        for (let i = 0; i < props.validations.length; i++) {\n        const validator = props.validations[i];\n        if (typeof validator === \"string\")\n            validationRes = basicValidation(validator,value);\n            if(validationRes.length > 1 ){\n                setErrorMsg(validationRes);\n                setClassInput(classNamesField.Error)\n            }else{\n                setErrorMsg('');                \n                setClassInput(classNamesField.Field)\n            }  \n        if (validationRes) break;\n        }        \n                      \n    };\n\n\n    const handleChange = (name,currentValue) => {        \n        setValue(currentValue);\n        runValidations(currentValue);\n        props.onChange(name,currentValue);\n    };\n\n    const onFocus = () => {\n        setTouchedOnce(true);\n        setClassInput(classNamesField.Focus)\n        setBlurred(false);\n    };\n\n    const onBlur = event => {\n        const {name} = event.target; \n        const currentValue = event.target.value; \n        runValidations(currentValue);\n        setBlurred(true);\n        if(errorMsg.length > 0){\n            setClassInput(classNamesField.Error)\n        }else{\n            setClassInput(classNamesField.Field)\n        }\n\n        props.onChange(name,currentValue);\n    };\n\n\n    useEffect(()=>{\n        if(props.value === null){\n            setErrorMsg('This value is required');\n            setClassInput(classNamesField.Error)\n        }\n        if(props.value === ''){\n            setErrorMsg('');\n            setValue('')\n            setClassInput(classNamesField.Field)\n        }\n       \n    },[props.value]);\n\n\n        const shouldDisplayError = errorMsg || isTouchedOnce && isBlurred;\n        return (\n        <div key={props.name} className={style.formField}>\n            <div className={style.errorSection}>\n             {shouldDisplayError && <span className={style.errorMsg}>{errorMsg}</span>}\n            </div>\n            <div className={style.labelSection}>\n            <label>{props.label}</label>\n            </div>            \n                <input\n                    className={classInput}\n                    type={props.type || \"text\"}\n                    value={value}\n                    name={props.name}\n                    onChange={(e)=>handleChange(props.name, e.target.value )}\n                    placeholder={props.placeholder}\n                    onFocus={onFocus}\n                    onBlur={onBlur}                    \n                />            \n        </div>\n        );\n}\n\nexport default TextField;"]},"metadata":{},"sourceType":"module"}