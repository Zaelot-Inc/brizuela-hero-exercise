{"ast":null,"code":"var _jsxFileName = \"/Users/Mancho/Projects/zaelot/githubZaelot/brizuela-hero-exercise/src/components/DropDown/DropDown.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport style from './dropdown.module.scss';\nimport chevron from \"../../assets/text-expand-arrow.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DropDown = props => {\n  _s();\n\n  const ref = useRef();\n  const base = useRef();\n  const [open, setOpen] = useState(undefined);\n  const [error, setError] = useState({\n    value: false,\n    msg: ''\n  });\n\n  const toggleOpen = () => {\n    if (open === undefined) {\n      setOpen(true);\n      return;\n    }\n\n    setOpen(!open);\n  };\n\n  const handleSelect = value => {\n    toggleOpen(!open);\n    props.onChange(props.name, value);\n  };\n\n  const handleValidation = value => {\n    if (value.value === null) {\n      setError({\n        value: true,\n        msg: 'This value is required'\n      });\n    } else {\n      setError({\n        value: false,\n        msg: ''\n      });\n    }\n  };\n\n  useEffect(() => {\n    handleValidation(props.value);\n    props.onChange(props.name, props.value);\n  }, [props.value]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.DropDown,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: style.Error,\n      children: error.msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: style.Label,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.SelectContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: error.value ? style.SelectError : style.Select,\n        ref: ref,\n        open: open,\n        error: error,\n        onClick: () => toggleOpen(),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: style.TextValue,\n          children: props.value.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: chevron,\n          alt: \"chevron to select\",\n          className: open ? style.imgOpen : style.imgClosed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), open && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.OptionContainer,\n        children: props.options.map((o, index) => {\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            className: style.Option,\n            value: o.value,\n            selected: o.value === props.value.value,\n            onClick: () => handleSelect(o),\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: style.TextValue,\n              children: o.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DropDown, \"ckZuLwvqjCexd5ScpLHQO94zqSA=\");\n\n_c = DropDown;\nexport default DropDown;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropDown\");","map":{"version":3,"sources":["/Users/Mancho/Projects/zaelot/githubZaelot/brizuela-hero-exercise/src/components/DropDown/DropDown.jsx"],"names":["React","useRef","useEffect","useState","style","DropDown","props","ref","base","open","setOpen","undefined","error","setError","value","msg","toggleOpen","handleSelect","onChange","name","handleValidation","Error","Label","label","SelectContainer","SelectError","Select","TextValue","chevron","imgOpen","imgClosed","OptionContainer","options","map","o","index","Option"],"mappings":"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","sourcesContent":["import React,{useRef,useEffect,useState} from 'react';\nimport style from './dropdown.module.scss';\nimport chevron from '../../assets/text-expand-arrow.svg';\n\nconst DropDown = props =>{\n\n    const ref = useRef();\n    const base = useRef();\n    const [open, setOpen] = useState(undefined);\n    const [error, setError] = useState({value:false, msg:''})\n    \n\n    const toggleOpen = () => {\n        if (open === undefined) {\n          setOpen(true)\n          return\n        }\n        setOpen(!open)\n    }\n    const handleSelect = value => {\n        toggleOpen(!open)        \n        props.onChange(props.name, value)\n    }  \n\n    const handleValidation=(value)=>{\n        if(value.value === null){\n           setError({value:true, msg:'This value is required'}) \n        }else{\n            setError({value:false, msg:''}) \n        }\n    }\n\n\n    useEffect(()=>{\n        handleValidation(props.value)\n        props.onChange(props.name, props.value)\n    },[props.value])\n\n\n    return (\n        <div className={style.DropDown}>\n            <span className={style.Error}>{error.msg}</span>\n            <label className={style.Label}>{props.label}</label>\n            <div className={style.SelectContainer}>\n                <div className={error.value? style.SelectError : style.Select}\n                    ref={ref}\n                    open={open}\n                    error={error}                    \n                    onClick={()=>toggleOpen()}\n                >\n                    <span className={style.TextValue}>{props.value.label}</span>\n                    <img src={chevron} alt=\"chevron to select\" className={ open ? style.imgOpen : style.imgClosed}/>\n                </div>\n                {open && (\n                    <div className={style.OptionContainer}>\n                    {props.options.map((o,index)=>{\n                        return(\n                            <button className={style.Option}\n                            key={index}\n                            value={o.value}\n                            selected={o.value === props.value.value}\n                            onClick={()=>handleSelect(o)}\n                        >\n                            <p className={style.TextValue}>{o.label}</p>\n                        </button>\n                        )                        \n                    })}                    \n                    </div>\n                )}                \n            </div>\n        </div>\n    )\n}\n\nexport default DropDown;"]},"metadata":{},"sourceType":"module"}